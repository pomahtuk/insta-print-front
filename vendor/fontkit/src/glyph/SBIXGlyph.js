// Generated by CoffeeScript 1.9.3
(function() {
  var SBIXGlyph, TTFGlyph, r,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TTFGlyph = require('./TTFGlyph');

  r = require('restructure');

  SBIXGlyph = (function(superClass) {
    var SBIXImage;

    extend(SBIXGlyph, superClass);

    function SBIXGlyph() {
      return SBIXGlyph.__super__.constructor.apply(this, arguments);
    }

    SBIXImage = new r.Struct({
      originX: r.uint16,
      originY: r.uint16,
      type: new r.String(4),
      data: new r.Buffer(function() {
        return this.parent.buflen - this._currentOffset;
      })
    });

    SBIXGlyph.prototype.getImageForSize = function(size) {
      var end, i, len, offsets, ref, start, table;
      ref = this._font.sbix.imageTables;
      for (i = 0, len = ref.length; i < len; i++) {
        table = ref[i];
        if (table.ppem >= size) {
          break;
        }
      }
      offsets = table.imageOffsets;
      start = offsets[this.id];
      end = offsets[this.id + 1];
      if (start === end) {
        return null;
      }
      this._font.stream.pos = start;
      return SBIXImage.decode(this._font.stream, {
        buflen: end - start
      });
    };

    SBIXGlyph.prototype.render = function(ctx, size) {
      var img, scale;
      img = this.getImageForSize(size);
      if (img != null) {
        scale = size / this._font.unitsPerEm;
        ctx.image(img.data, {
          height: size,
          x: img.originX,
          y: (this.bbox[1] - img.originY) * scale
        });
      }
      if (this._font.sbix.flags.renderOutlines) {
        return SBIXGlyph.__super__.render.apply(this, arguments);
      }
    };

    return SBIXGlyph;

  })(TTFGlyph);

  module.exports = SBIXGlyph;

}).call(this);
