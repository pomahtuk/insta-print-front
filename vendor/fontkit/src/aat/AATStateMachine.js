// Generated by CoffeeScript 1.9.3
(function() {
  var AATLookupTable, AATStateMachine;

  AATLookupTable = require('./AATLookupTable');

  AATStateMachine = (function() {
    var DELETED_GLYPH_CLASS, DONT_ADVANCE, END_OF_LINE_CLASS, END_OF_TEXT_CLASS, OUT_OF_BOUNDS_CLASS, START_OF_LINE_STATE, START_OF_TEXT_STATE;

    function AATStateMachine(stateTable) {
      this.stateTable = stateTable;
      this.lookupTable = new AATLookupTable(this.stateTable.classTable);
    }

    START_OF_TEXT_STATE = 0;

    START_OF_LINE_STATE = 1;

    END_OF_TEXT_CLASS = 0;

    OUT_OF_BOUNDS_CLASS = 1;

    DELETED_GLYPH_CLASS = 2;

    END_OF_LINE_CLASS = 3;

    DONT_ADVANCE = 0x4000;

    AATStateMachine.prototype.process = function(glyphs, reverse, processEntry) {
      var classCode, currentState, dir, entry, entryIndex, glyph, index, row, shouldAdvance;
      currentState = START_OF_TEXT_STATE;
      index = reverse ? glyphs.length - 1 : 0;
      dir = reverse ? -1 : 1;
      while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {
        glyph = null;
        classCode = OUT_OF_BOUNDS_CLASS;
        shouldAdvance = true;
        if (index === glyphs.length || index === (-1)) {
          classCode = END_OF_TEXT_CLASS;
        } else {
          glyph = glyphs[index];
          if (glyph.id === 0xffff) {
            classCode = DELETED_GLYPH_CLASS;
          } else {
            classCode = this.lookupTable.lookup(glyph.id);
            if (classCode == null) {
              classCode = OUT_OF_BOUNDS_CLASS;
            }
          }
        }
        row = this.stateTable.stateArray.getItem(currentState);
        entryIndex = row[classCode];
        entry = this.stateTable.entryTable.getItem(entryIndex);
        if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {
          processEntry(glyph, entry, index);
          shouldAdvance = !(entry.flags & DONT_ADVANCE);
        }
        currentState = entry.newState;
        if (shouldAdvance) {
          index += dir;
        }
      }
      return glyphs;
    };

    return AATStateMachine;

  })();

  module.exports = AATStateMachine;

}).call(this);
