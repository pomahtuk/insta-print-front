// Generated by CoffeeScript 1.9.3
(function() {
  var Directory, TTFFont, TrueTypeCollection, r, tables;

  r = require('restructure');

  TTFFont = require('./TTFFont');

  Directory = require('./tables/directory');

  tables = require('./tables');

  TrueTypeCollection = (function() {
    var TTCHeader, get;

    get = require('./get')(TrueTypeCollection);

    TTCHeader = new r.VersionedStruct(r.uint32, {
      0x00010000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts')
      },
      0x00020000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts'),
        dsigTag: r.uint32,
        dsigLength: r.uint32,
        dsigOffset: r.uint32
      }
    });

    TrueTypeCollection.probe = function(buffer) {
      return buffer.toString('ascii', 0, 4) === 'ttcf';
    };

    function TrueTypeCollection(stream1) {
      this.stream = stream1;
      if (this.stream.readString(4) !== 'ttcf') {
        throw new Error('Not a TrueType collection');
      }
      this.header = TTCHeader.decode(this.stream);
    }

    TrueTypeCollection.prototype.getFont = function(name) {
      var font, i, len, offset, ref, stream;
      ref = this.header.offsets;
      for (i = 0, len = ref.length; i < len; i++) {
        offset = ref[i];
        stream = new r.DecodeStream(this.stream.buffer);
        stream.pos = offset;
        font = new TTFFont(stream);
        if (font.postscriptName === name) {
          return font;
        }
      }
      return null;
    };

    get('fonts', function() {
      var fonts, i, len, offset, ref, stream;
      fonts = [];
      ref = this.header.offsets;
      for (i = 0, len = ref.length; i < len; i++) {
        offset = ref[i];
        stream = new r.DecodeStream(this.stream.buffer);
        stream.pos = offset;
        fonts.push(new TTFFont(stream));
      }
      return fonts;
    });

    return TrueTypeCollection;

  })();

  module.exports = TrueTypeCollection;

}).call(this);
